/**********************************************************************/
-- Description: INSERT PARTS_GODOWN_TRANS  AND PARTS_GODOWN ADMIN
-- Remarks:	
-- add Par	@TXN_TYPE_ID
-- add update UNIT_COST_AFTER 2013-08-27 zcs
---------------------------------------------------------------------
-- Action		Date			Staff		Version		Remarks
-- Create	 	2013-05-31		ZCS			1.00.00
/**********************************************************************/
CREATE PROCEDURE  spInsertInvTrans
( 
	@BU_CODE			nvarchar(10),	--
	@PARTS_ID			BIGINT,			--
	@GODOWN_ID			BIGINT,			--
	@TXN_TYPE			nvarchar(30),	--"STOCK_IN	STOCK_IN_RETURN		STOCK_OUT"
	@SRC_REF_NBR		nvarchar(30),	--NOT NULL  --Document No (e.g. REQUISITION_NO, STOCK ADJUSTMENT NO)   上一级文档楄号
	@QTY				BIGINT,			--NOT NULL	--数量
	@SRC_ID				BIGINT,			--NOT NULL	--子项ID

	@TXN_QTY			BIGINT,			--==@QTY						 
	@REASON_ID			BIGINT=NULL,			--ADJUSTMENT 	NOT NULL 
	@TXN_DATE			datetime=NULL,									  
	@TXN_COST			decimal(7,2)=NULL,	
	@TXN_PRICE			decimal(7,2)=NULL,	--STOCK_OUT NOT NULL
	@INTERFACE_IND		nvarchar(10)=NULL,	--"get INTERFACE_IND from PARTS_GODOWN_TRANS_TYPE	where TXN_TYPE_ID=XXX"	OK
	@TO_GOWDOWN			BIGINT=NULL,		-- TO GOWDOWN ID

	@CREATED_BY			BIGINT,
	@ResultType			INT OUTPUT,
	@ResultMessage		NVARCHAR(1000) OUTPUT
)
AS
BEGIN
	DECLARE @PARTS_GODOWN_ID	BIGINT
	DECLARE @STOCK_QTY			INT
	DECLARE @IN_TRANSIT_QTY		INT
	DECLARE @RSV_QTY			INT
	--DECLARE @PO_WAIT_QTY		INT
	DECLARE @BORROWED_QTY		INT
	DECLARE @PARTS_TO_GOWDOWN_ID	BIGINT=NULL

	DECLARE @M_STOCK_QTY BIGINT,@M_TOTAL_COST DECIMAL(14,2),@M_UNIT_COST DECIMAL(7,2) 

	BEGIN TRY

		SELECT @PARTS_GODOWN_ID=PARTS_GODOWN_ID FROM PARTS_GODOWN WHERE BU_CODE=@BU_CODE AND PARTS_ID=@PARTS_ID AND GODOWN_ID = @GODOWN_ID
		IF @TO_GOWDOWN IS NOT NULL
			SELECT @PARTS_TO_GOWDOWN_ID=PARTS_GODOWN_ID FROM PARTS_GODOWN WHERE BU_CODE=@BU_CODE AND PARTS_ID=@PARTS_ID AND GODOWN_ID = @GODOWN_ID
		
		IF @PARTS_GODOWN_ID IS NULL
		BEGIN
			--SET @ResultType = -11001;	--Rcord not exist
			--SET @ResultMessage = 'Parts Godown Rcord not exist.';
			--RETURN @ResultType;
			INSERT PARTS_GODOWN 
			(
				GODOWN_ID
				,BU_CODE
				,PARTS_ID
				,STOCK_QTY
				,IN_TRANSIT_QTY
				--,PO_WAIT_QTY
				,RSV_QTY
				,BORROWED_QTY
				,CREATED_BY
				,CREATION_DATE
				,LAST_UPDATED_BY
				,LAST_UPDATE_DATE
			)
			VALUES
			( 
				@GODOWN_ID
				,@BU_CODE
				,@PARTS_ID
				,0
				,0
				--,0
				,0
				,0
				,@CREATED_BY
				,GETDATE()
				,@CREATED_BY
				,GETDATE()
			)
			SET @PARTS_GODOWN_ID =@@IDENTITY
		END

		IF @REASON_ID IS NULL AND @TXN_TYPE=UPPER( 'ADJUSTMENT')
		BEGIN
			SET @ResultType = -11001;				--Rcord not exist
			SET @ResultMessage = 'Reason ID Not null.';
			RETURN @ResultType;
		END
		IF @TXN_DATE IS NULL
		BEGIN
			SET @TXN_DATE= dbo.fnGetTransactionDate(@BU_CODE)
		END

		--	@TXN_COST			decimal(7,2),
		--IF    @TXN_COST IS NULL-- AND @TXN_TYPE= 'PO_APPROVED'
		--BEGIN
		--	SET @ResultType = -11001;				--Rcord not exist
		--	SET @ResultMessage = 'TXN_COST Not null.';
		--	RETURN @ResultType;
		--END
		 
		----@TXN_PRICE			decimal(7,2),	 
		IF @TXN_TYPE= 'STOCK_OUT' AND @TXN_PRICE IS NULL
		BEGIN
			SET @ResultType = -11001;				--Rcord not exist
			SET @ResultMessage = 'Txn price not null.';
			RETURN @ResultType;
		END
	
		-- AUTO PARM
		DECLARE @INTERFACE_DATE			datetime		--NULL	
		DECLARE @TXN_TYPE_ID			bigint			--NOT NULL
		DECLARE @TEMP_INTERFACE_IND		nvarchar(10)	--NOT NULL  --'Y'/'N'
		DECLARE @TXN_DESC				nvarchar(100)	--NOT NULL
		DECLARE	@DFT_REASON_TYPE NVARCHAR(100),@DFT_REASON_CODE  NVARCHAR(100),@NEED_REASON_IND NVARCHAR(1),@UPDATE_COST_IND NVARCHAR(1)

		--Select PARTS GODOWN TRANS TYPE
		IF EXISTS(SELECT 1 FROM PARTS_GODOWN_TRANS_TYPE where BU_CODE=@BU_CODE AND TXN_TYPE= @TXN_TYPE)
		BEGIN
			SELECT 
				@TXN_TYPE_ID=TXN_TYPE_ID
				,@TEMP_INTERFACE_IND=INTERFACE_IND
				,@NEED_REASON_IND=NEED_REASON_IND
				,@DFT_REASON_TYPE=DFT_REASON_TYPE
				,@DFT_REASON_CODE=DFT_REASON_CODE
				,@UPDATE_COST_IND=UPDATE_COST_IND
			FROM PARTS_GODOWN_TRANS_TYPE WHERE BU_CODE=@BU_CODE AND  TXN_TYPE= @TXN_TYPE
		END
		ELSE
		BEGIN
			SET @ResultType = -11004;				--Rcord not exist
			SET @ResultMessage = 'Get parts godown trans type failure.';
			RETURN @ResultType;
		END
		
		--20131009 ZCS
		IF @UPDATE_COST_IND='Y'
		BEGIN
			IF  @TXN_COST IS NULL
			BEGIN
				SET @ResultType = -11001;				--Rcord not exist
				SET @ResultMessage = 'Txn price not null.';
				RETURN @ResultType;
			END
		END
		ELSE
		BEGIN		 
			EXEC dbo.spGetPartsLatestQtyUnitCost @BU_CODE,@PARTS_ID,@TXN_DATE,'REALTIME',@M_STOCK_QTY OUTPUT,@M_TOTAL_COST  OUTPUT,@TXN_COST OUTPUT
												 ,@ResultType  OUTPUT,@ResultMessage OUTPUT
			SET @TXN_COST=@TXN_COST
		END
		--20131009 ZCS

		IF @INTERFACE_IND =N'' OR @INTERFACE_IND IS NULL
			SET @INTERFACE_IND=@TEMP_INTERFACE_IND

		IF(@TXN_TYPE=N'ADJUSTMENT' ) AND @REASON_ID IS NULL--OR @TXN_TYPE =N'BORROWED' OR @TXN_TYPE =N'BORROWED_RETURN'
		BEGIN
				SET @ResultType = -11006;				--Rcord not exist
				SET @ResultMessage = 'Reason code not null.'
				RETURN @ResultType;
		END
		--Get @REASON_ID
		IF  @NEED_REASON_IND=N'Y' AND @REASON_ID IS NULL
		BEGIN
			IF EXISTS(SELECT 1 FROM REASON_CODE 
					LEFT JOIN MASTER_CODE  ON MASTER_CODE.MASTER_ID = REASON_CODE.REASON_TYPE
					LEFT JOIN MASTER_CODE_TYPE ON MASTER_CODE.MASTER_TYPE_ID= MASTER_CODE_TYPE.MASTER_TYPE_ID AND MASTER_CODE_TYPE.MASTER_TYPE_CODE='REASON_TYPE'
					WHERE REASON_CODE.BU_CODE=@BU_CODE AND REASON_CODE= @DFT_REASON_CODE AND MASTER_CODE.MASTER_CODE=@DFT_REASON_TYPE)
			BEGIN		
				SELECT @REASON_ID=REASON_ID FROM REASON_CODE 
					LEFT JOIN MASTER_CODE  ON MASTER_CODE.MASTER_ID = REASON_CODE.REASON_TYPE
					LEFT JOIN MASTER_CODE_TYPE ON MASTER_CODE.MASTER_TYPE_ID= MASTER_CODE_TYPE.MASTER_TYPE_ID AND MASTER_CODE_TYPE.MASTER_TYPE_CODE='REASON_TYPE'
					WHERE REASON_CODE.BU_CODE=@BU_CODE AND REASON_CODE= @DFT_REASON_CODE AND MASTER_CODE.MASTER_CODE=@DFT_REASON_TYPE
			END	
			--ELSE
			--BEGIN
			--	SET @ResultType = -11005;				--Rcord not exist
			--	SET @ResultMessage = 'Get REASON CODE failure.' + @DFT_REASON_CODE;
			--	RETURN @ResultType;
			--END
		END
		--ELSE
		--BEGIN
		--	IF EXISTS(SELECT 1 from REASON_CODE where REASON_CODE.REASON_ID=@REASON_ID)
		--	BEGIN		
		--		select @REASON_ID=REASON_ID FROM REASON_CODE where REASON_CODE.REASON_ID=@REASON_ID
		--	END
		--	ELSE
		--	BEGIN
		--		SET @ResultType = -11005;				--Rcord not exist
		--		SET @ResultMessage = 'Get REASON CODE failure.' + @DFT_REASON_CODE;
		--		RETURN @ResultType;
		--	END
		--END
	
		-- DESC
			DECLARE  @GODOWNCODE NVARCHAR(4)
			SELECT @GODOWNCODE=GODOWN_CODE FROM GODOWN WHERE GODOWN_ID= @GODOWN_ID
			
			--BU_CODE+'|' +GODOWN_CODE+'|' +BRAND_CODE+'|'+PART_NO+'|'+REASON_TYPE+'|'+REASON_CODE																					
			SELECT 
				@TXN_DESC= @BU_CODE + '|' + @GODOWNCODE + '|' +   BRAND.BRAND_CODE + '|'+ PARTS.PARTS_NO + '|' + @TXN_TYPE+'|'+@DFT_REASON_CODE 
			FROM PARTS  
			LEFT JOIN BRAND ON BRAND.BRAND_ID= PARTS.BRAND_ID
		--END GET PARM	

		--SELECT GODOWN NUMBER
		SELECT 
			@STOCK_QTY=STOCK_QTY
			--,@PO_WAIT_QTY=PO_WAIT_QTY
			,@RSV_QTY=RSV_QTY 
			,@IN_TRANSIT_QTY=IN_TRANSIT_QTY
			,@BORROWED_QTY=BORROWED_QTY
		FROM
			PARTS_GODOWN 
		WHERE  
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		--BEGIN TRANSACTION InsertOp;-- START TRAN
		DECLARE @STOCK_QTY_AFTER BIGINT
		SET @STOCK_QTY_AFTER=@STOCK_QTY
	
	
		
		SET @TXN_TYPE = UPPER(@TXN_TYPE)
		IF  NOT (@TXN_TYPE=N'STOCK_IN_CORRECT' OR @TXN_TYPE =N'ADJUSTMENT' OR @TXN_TYPE =N'PO_WAIT_CORRECT' OR @TXN_TYPE=N'BORROWED_RETURN') AND @QTY < 0
		BEGIN
			SET @ResultType = -11002;				--Rcord not exist
			SET @ResultMessage = 'TXN QTY must be greater than 0.';
			RETURN @ResultType;
		END

		--BEGIN TRANSACTION
		--IF @TXN_TYPE= 'PO_APPROVED'   --1)PO_APPROVED
		--BEGIN
		--	UPDATE  
		--		PARTS_GODOWN 
		--	SET 
		--		PO_WAIT_QTY= PO_WAIT_QTY+ @QTY,
		--		LAST_UPDATED_BY=@CREATED_BY,
		--		LAST_UPDATE_DATE=GETDATE()
		--	WHERE 
		--		PARTS_GODOWN_ID=@PARTS_GODOWN_ID
		--END
		--ELSE 
		--IF @TXN_TYPE= 'CANCEL_PO_WAIT'	--2)CANCEL_PO_WAIT
		--BEGIN
		--	IF (@PO_WAIT_QTY-@QTY) < 0
		--	BEGIN
		--		SET @ResultType = -11021;				---PO_WAIT_QTY Less than 0.
		--		SET @ResultMessage = 'PO WAIT QTY  Less than 0.';
		--		RETURN @ResultType;
		--	END
		  
		--	UPDATE  
		--		PARTS_GODOWN 
		--	SET 
		--		PO_WAIT_QTY= PO_WAIT_QTY - @QTY,
		--		LAST_UPDATED_BY=@CREATED_BY,
		--		LAST_UPDATE_DATE=GETDATE()
		--	WHERE 
		--		PARTS_GODOWN_ID=@PARTS_GODOWN_ID
		--	SET @STOCK_QTY_AFTER= @STOCK_QTY
		--END
		--ELSE 
		IF @TXN_TYPE= 'STOCK_IN'	--2)STOCK_IN
		BEGIN
			UPDATE  
				PARTS_GODOWN 
			SET
				STOCK_QTY=STOCK_QTY+ @QTY,
				LAST_UPDATED_BY=@CREATED_BY,
				LAST_UPDATE_DATE=GETDATE()
			WHERE 
				PARTS_GODOWN_ID=@PARTS_GODOWN_ID

			SET @STOCK_QTY_AFTER= @STOCK_QTY+ @QTY
		END
	
		--
		ELSE IF @TXN_TYPE= 'STOCK_IN_RETURN'	--)STOCK_IN_RETURN
		BEGIN
			IF (@STOCK_QTY-@QTY) < 0
			BEGIN
				SET @ResultType = -11021;
				SET @ResultMessage = 'Stock qty  Less than 0.';
				RETURN @ResultType;
			END
		  
			 UPDATE  
				PARTS_GODOWN 
			SET 
				STOCK_QTY=STOCK_QTY- @QTY,
				LAST_UPDATED_BY=@CREATED_BY,
				LAST_UPDATE_DATE=GETDATE()
			WHERE 
				PARTS_GODOWN_ID=@PARTS_GODOWN_ID

			SET @STOCK_QTY_AFTER= @STOCK_QTY- @QTY
			SET @QTY=@QTY * -1;
		END
		ELSE IF @TXN_TYPE= 'STOCK_IN_RETURN_CANCEL'	--)STOCK_IN_RETURN_CANCEL
		BEGIN
			UPDATE  
				PARTS_GODOWN 
			SET 
				STOCK_QTY=STOCK_QTY+ @QTY,
				LAST_UPDATED_BY=@CREATED_BY,
				LAST_UPDATE_DATE=GETDATE()
			WHERE 
				PARTS_GODOWN_ID=@PARTS_GODOWN_ID

			SET @STOCK_QTY_AFTER= @STOCK_QTY + @QTY
		END	
	ELSE IF  @TXN_TYPE= 'STOCK_IN_CORRECT'		--3)STOCK_IN_CORRECT
	BEGIN 
		IF (@STOCK_QTY+@QTY) < 0
		BEGIN
			SET @ResultType = -11031;				---Stock QTY Less than 0.
			SET @ResultMessage = 'Stock qty  Less than 0.';
			RETURN @ResultType;
		END
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY+ @QTY
	END
	--ELSE IF  @TXN_TYPE= 'PO_WAIT_CORRECT'		--3)PO_WAIT_CORRECT
	--BEGIN
	--	IF (@PO_WAIT_QTY+@QTY) < 0
	--	BEGIN
	--		SET @ResultType = -11031;				---Stock QTY Less than 0.
	--		SET @ResultMessage = 'PO Wait QTY  Less than 0.';
	--		RETURN @ResultType;
	--	END
	--	UPDATE  
	--		PARTS_GODOWN 
	--	SET 
	--		PO_WAIT_QTY=PO_WAIT_QTY + @QTY,
	--		LAST_UPDATED_BY=@CREATED_BY,
	--		LAST_UPDATE_DATE=GETDATE()
	--	WHERE 
	--		PARTS_GODOWN_ID=@PARTS_GODOWN_ID

	--	SET @STOCK_QTY_AFTER= @STOCK_QTY
	--END
	
	--ELSE IF   @TXN_TYPE='PO_CANCEL'				--4)PO_CANCEL
	--BEGIN
	--	IF (@PO_WAIT_QTY-@QTY) < 0
	--	BEGIN
	--		SET @ResultType = -11041;				---PO_WAIT_QTY Less than 0.
	--		SET @ResultMessage = 'PO WAIT QTY  Less than 0.';
	--		RETURN @ResultType;
	--	END
				  
	--	UPDATE  
	--		PARTS_GODOWN 
	--	SET 
	--		PO_WAIT_QTY= PO_WAIT_QTY - @QTY,
	--		LAST_UPDATED_BY=@CREATED_BY,
	--		LAST_UPDATE_DATE=GETDATE()
	--	WHERE 
	--		PARTS_GODOWN_ID=@PARTS_GODOWN_ID

	--	SET @STOCK_QTY_AFTER= @STOCK_QTY
	--END
	ELSE IF   @TXN_TYPE='RESERVE_SO'			--5)RESERVE_SO
	BEGIN
		UPDATE  
			PARTS_GODOWN 
		SET 
			RSV_QTY= RSV_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY
	END
	ELSE IF   @TXN_TYPE='RESERVE_SO_CANCEL'			--5)RESERVE_SO_CANCEL
	BEGIN
		IF (@RSV_QTY-@QTY) < 0
		BEGIN
			SET @ResultType = -11051;
			SET @ResultMessage = 'Rsv qty  Less than 0.';
			RETURN @ResultType;
		END

		UPDATE  
			PARTS_GODOWN 
		SET 
			RSV_QTY= RSV_QTY - @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY
		SET @QTY=@QTY * -1;
	END
	ELSE IF   @TXN_TYPE='STOCK_OUT'			--6)STOCK_OUT
	BEGIN
		IF (@STOCK_QTY-@QTY) < 0
		BEGIN
			SET @ResultType = -11051;
			SET @ResultMessage = 'Stock QTY  Less than 0.';
			RETURN @ResultType;
		END
		UPDATE  
			PARTS_GODOWN 
		SET
			STOCK_QTY=STOCK_QTY - @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID
			
		SET @STOCK_QTY_AFTER= @STOCK_QTY- @QTY
		SET @QTY=@QTY * -1;
	END
	ELSE IF  @TXN_TYPE='STOCK_OUT_CANCEL'			--ZCS 20131114
	BEGIN
		IF (@STOCK_QTY+@QTY) < 0
		BEGIN
			SET @ResultType = -11051;
			SET @ResultMessage = 'Stock qty  Less than 0.';
			RETURN @ResultType;
		END
		UPDATE  
			PARTS_GODOWN 
		SET
			STOCK_QTY=STOCK_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID
			
		SET @STOCK_QTY_AFTER= @STOCK_QTY+ @QTY
	END
	--20131010 zcs
	--ELSE IF   @TXN_TYPE='RESERVE_MOVE'				--7)RESERVE_MOVE
	--BEGIN
	--	IF (@STOCK_QTY-@QTY) < 0
	--	BEGIN
	--		SET @ResultType = -11071;				---Stock QTY Less than 0.
	--		SET @ResultMessage = 'Stock quantity is insufficient.';
	--		RETURN @ResultType;
	--	END
	--	UPDATE  
	--		PARTS_GODOWN 
	--	SET 
	--		RSV_QTY= RSV_QTY + @QTY,
	--		LAST_UPDATED_BY=@CREATED_BY,
	--		LAST_UPDATE_DATE=GETDATE()
	--	WHERE 
	--		PARTS_GODOWN_ID=@PARTS_GODOWN_ID

	--	SET @STOCK_QTY_AFTER= @STOCK_QTY		
	--END
	--ELSE IF   @TXN_TYPE='RESERVE_MOVE_CANCEL'				--7) -- RESERVE_MOVE_CANCEL
	--BEGIN
	--	IF (@RSV_QTY-@QTY) < 0
	--	BEGIN
	--		SET @ResultType = -11071;				---Stock QTY Less than 0.
	--		SET @ResultMessage = 'Reserve QTY  Less than 0.';
	--		RETURN @ResultType;
	--	END
	--	UPDATE  
	--		PARTS_GODOWN 
	--	SET 
	--		RSV_QTY= RSV_QTY - @QTY,
	--		LAST_UPDATED_BY=@CREATED_BY,
	--		LAST_UPDATE_DATE=GETDATE()
	--	WHERE 
	--		PARTS_GODOWN_ID=@PARTS_GODOWN_ID

	--	SET @STOCK_QTY_AFTER= @STOCK_QTY
	--	SET @QTY=@QTY * -1;
	--END
	--20131010 zcs
	ELSE IF   @TXN_TYPE='STOCK_MOVE_OUT'			--8)STOCK_MOVE_OUT
	BEGIN
		IF (@STOCK_QTY-@QTY) < 0
		BEGIN
			SET @ResultType = -11081;				---Stock QTY Less than 0.
			SET @ResultMessage = 'Stock QTY  Less than 0.';
			RETURN @ResultType;
		END
		--IF (@RSV_QTY-@QTY) < 0	20131008 zcs
		--BEGIN
		--	SET @ResultType = -11082;				---Reserve QTY Less than 0.
		--	SET @ResultMessage = 'Reserve QTY  Less than 0.';
		--	RETURN @ResultType;
		--END
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY - @QTY,
			--RSV_QTY= RSV_QTY - @QTY,		--20131008 zcs
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY- @QTY
		SET @QTY=@QTY * -1;
	END  
	ELSE IF  @TXN_TYPE='STOCK_RETURN'	
	BEGIN
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID
		SET @STOCK_QTY_AFTER= @STOCK_QTY+@QTY
	END
	ELSE IF   @TXN_TYPE='STOCK_MOVE_OUT_CANCEL'			--8)STOCK_MOVE_OUT_CANCEL
	BEGIN
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID
		SET @STOCK_QTY_AFTER= @STOCK_QTY+@QTY
	END
	ELSE IF   @TXN_TYPE='STOCK_MOVE_PEND_IN'			--9)STOCK_MOVE_PEND_IN
	BEGIN
		UPDATE  
			PARTS_GODOWN 
		SET 
			IN_TRANSIT_QTY= IN_TRANSIT_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY
	END
	ELSE IF   @TXN_TYPE='STOCK_MOVE_PEND_IN_CANCEL'			--9)STOCK_MOVE_PEND_IN_CANCEL
	BEGIN
		IF (@IN_TRANSIT_QTY-@QTY) < 0
		BEGIN
			SET @ResultType = -11091;				---Reserve QTY Less than 0.
			SET @ResultMessage = 'IN TRANSIT QTY  Less than 0.';
			RETURN @ResultType;
		END
		UPDATE  
			PARTS_GODOWN 
		SET 
			IN_TRANSIT_QTY= IN_TRANSIT_QTY - @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY
		SET @QTY=@QTY * -1;
	END
	ELSE IF   @TXN_TYPE='STOCK_MOVE_IN'				--10)STOCK_MOVE_IN
	BEGIN
		IF (@IN_TRANSIT_QTY-@QTY) < 0
		BEGIN
			SET @ResultType = -11101;				---Reserve QTY Less than 0.
			SET @ResultMessage = 'In transit qty  Less than 0.';
			RETURN @ResultType;
		END
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY + @QTY
			,IN_TRANSIT_QTY= IN_TRANSIT_QTY - @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY+ @QTY
	END
	ELSE IF   @TXN_TYPE='RESERVE_REQUISITION'			--11)RESERVE_REQUISITION
	BEGIN
		UPDATE  
			PARTS_GODOWN 
		SET 
			RSV_QTY= @RSV_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID
			
		SET @STOCK_QTY_AFTER= @STOCK_QTY
	END
	ELSE IF   @TXN_TYPE='REQUISITION_OUT'			--12)REQUISITION_OUT
	BEGIN
		IF (@STOCK_QTY-@QTY) < 0
		BEGIN
			SET @ResultType = -11111;				---Stock QTY Less than 0.
			SET @ResultMessage = 'Stock QTY  Less than 0.';
			RETURN @ResultType;
		END
		
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY - @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID
		SET @STOCK_QTY_AFTER= @STOCK_QTY- @QTY
		SET @QTY=@QTY * -1;
	END
	ELSE IF   @TXN_TYPE='REQUISITION_IN'			--13)REQUISITION_IN
	BEGIN
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY+ @QTY
	END
	ELSE IF   @TXN_TYPE='RESERVE_REQUISITION'			--13)RESERVE_REQUISITION
	BEGIN
		UPDATE  
			PARTS_GODOWN 
		SET 
			RSV_QTY= RSV_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY 
	END
	ELSE IF   @TXN_TYPE='RESERVE_REQUISITION_CANCEL'			--13)RESERVE_REQUISITION_CANCEL
	BEGIN
		IF (@RSV_QTY-@QTY) < 0
		BEGIN
			SET @ResultType = -11112;				---Reserve QTY Less than 0.
			SET @ResultMessage = 'Reserve QTY  Less than 0.';
			RETURN @ResultType;
		END
		UPDATE  
			PARTS_GODOWN 
		SET 
			RSV_QTY= RSV_QTY - @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY
		SET @QTY=@QTY * -1;
	END
	ELSE IF   @TXN_TYPE='JOB_USAGE'			--14)JOB_USAGE
	BEGIN
		IF (@STOCK_QTY-@QTY) < 0
		BEGIN
			SET @ResultType = -11141;				---Stock QTY Less than 0.
			SET @ResultMessage = 'Stock QTY  Less than 0.';
			RETURN @ResultType;
		END	
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY - @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY - @QTY
		SET @QTY=@QTY * -1;
	END
	ELSE IF   @TXN_TYPE='JOB_USAGE_CANCEL'			--14_1)JOB_USAGE
	BEGIN
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY + @QTY
	END
	--_CANCEL
	ELSE IF   @TXN_TYPE='RESERVE_REQUISITION_RETURN'			--15)RESERVE_REQUISITION_RETURN
	BEGIN
		UPDATE  
			PARTS_GODOWN 
		SET 
			RSV_QTY= RSV_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY
	END
	ELSE IF   @TXN_TYPE='REQUISITION_RETURN_OUT'			--16)REQUISITION_RETURN_OUT
	BEGIN
		IF (@STOCK_QTY-@QTY) < 0
		BEGIN
			SET @ResultType = -11161;				---Stock QTY Less than 0.
			SET @ResultMessage = 'Stock QTY  Less than 0.';
			RETURN @ResultType;
		END	
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY - @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY-@QTY
		SET @QTY=@QTY * -1;
	END
	ELSE IF   @TXN_TYPE='REQUISITION_RETURN_IN'			--17)REQUISITION_RETURN_IN
	BEGIN
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY+ @QTY
	END
	ELSE IF   @TXN_TYPE='ADJUSTMENT'			--18)ADJUSTMENT
	BEGIN
		IF (@STOCK_QTY+@QTY) < 0
		BEGIN
			SET @ResultType = -11181;				---Stock QTY Less than 0.
			SET @ResultMessage = 'Stock qty  Less than 0.';
			RETURN @ResultType;
		END
		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID

		SET @STOCK_QTY_AFTER= @STOCK_QTY+ @QTY
	END
	ELSE IF @TXN_TYPE='BORROWED'
	BEGIN
		UPDATE  
			PARTS_GODOWN 
		SET
			STOCK_QTY=STOCK_QTY + @QTY,
			BORROWED_QTY=BORROWED_QTY + @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID
		SET @STOCK_QTY_AFTER= @STOCK_QTY+ @QTY
	END
	ELSE IF   @TXN_TYPE='BORROWED_RETURN'			--12)REQUISITION_OUT
	BEGIN
		IF (@BORROWED_QTY-@QTY) < 0
		BEGIN
			SET @ResultType = -11202;				---Reserve QTY Less than 0.
			SET @ResultMessage = 'Borrowed qty  less than 0.';
			RETURN @ResultType;
		END
		IF (@STOCK_QTY-@QTY) < 0
		BEGIN
			SET @ResultType = -11181;				---Stock QTY Less than 0.
			SET @ResultMessage = 'Stock Qty  Less than 0.';
			RETURN @ResultType;
		END

		UPDATE  
			PARTS_GODOWN 
		SET 
			STOCK_QTY=STOCK_QTY - @QTY,
			BORROWED_QTY= @BORROWED_QTY - @QTY,
			LAST_UPDATED_BY=@CREATED_BY,
			LAST_UPDATE_DATE=GETDATE()
		WHERE 
			PARTS_GODOWN_ID=@PARTS_GODOWN_ID
		SET @STOCK_QTY_AFTER= @STOCK_QTY- @QTY
		SET @QTY=@QTY * -1;
	END
	ELSE
	BEGIN
			SET @ResultType = -11009;
			SET @ResultMessage = 'Trans Type not exist.';
			RETURN @ResultType;
	END
		--end all

		SET @TXN_QTY=0
		SET @TXN_QTY=@QTY

	
		DECLARE @BEFORE_TOTAL_COST	DECIMAL(14,2)
			,@TOTAL_COST_DIFF	DECIMAL(14,2)
			,@TRANS_ID			BIGINT
		EXEC dbo.spGetPartsLatestQtyUnitCost @BU_CODE,@PARTS_ID,@TXN_DATE,'REALTIME',@M_STOCK_QTY OUTPUT,@TOTAL_COST_DIFF  OUTPUT,@M_UNIT_COST OUTPUT
												,@ResultType  OUTPUT,@ResultMessage OUTPUT

		--Insert Trans
		INSERT INTO  PARTS_GODOWN_TRANS(
					BU_CODE,
					PARTS_GODOWN_ID
					,TXN_TYPE_ID
					,REASON_ID
					,TXN_TYPE,
					TXN_DATE
					,TXN_DESC
					,SRC_ID
					,SRC_REF_NBR
					,TXN_QTY
					,QTY
					,TXN_COST
					,TXN_PRICE
					,INTERFACE_IND
					,INTERFACE_DATE
					,CREATED_BY
					,CREATION_DATE
					,LAST_UPDATED_BY
					,LAST_UPDATE_DATE
					,STOCK_QTY_AFTER
					,TO_PARTS_GODOWN_ID)
				VALUES
					(@BU_CODE
					,@PARTS_GODOWN_ID
					,@TXN_TYPE_ID
					,@REASON_ID
					,@TXN_TYPE
					,@TXN_DATE
					,@TXN_DESC
					,@SRC_ID
					,@SRC_REF_NBR
					,@TXN_QTY
					,@QTY
					,@TXN_COST
					,@TXN_PRICE
					,@INTERFACE_IND
					,@INTERFACE_DATE
					,@CREATED_BY,GETDATE(),@CREATED_BY,GETDATE()
					,@STOCK_QTY_AFTER
					,@PARTS_TO_GOWDOWN_ID)
		SET @TRANS_ID=@@IDENTITY
		
		EXEC dbo.spGetPartsLatestQtyUnitCost @BU_CODE,@PARTS_ID,@TXN_DATE,'REALTIME',@M_STOCK_QTY OUTPUT,@M_TOTAL_COST  OUTPUT,@M_UNIT_COST OUTPUT
												,@ResultType  OUTPUT,@ResultMessage OUTPUT

		IF @TXN_TYPE ='ADJUSTMENT'
		BEGIN
			SET @TOTAL_COST_DIFF=@M_TOTAL_COST-@BEFORE_TOTAL_COST
		END
		ELSE IF @TXN_TYPE IN  ('BORROWED','BORROWED_RETURN','JOB_USAGE','STOCK_IN','STOCK_IN_CORRECT','STOCK_IN_RETURN','STOCK_OUT','STOCK_OUT_CANCEL','STOCK_RETURN','JOB_USAGE_CANCEL')
		BEGIN
			SET @TOTAL_COST_DIFF=@TXN_QTY * @TXN_COST
		END
		ELSE 
		BEGIN
			SET @TOTAL_COST_DIFF=0
		END 


		UPDATE 
			PARTS_GODOWN_TRANS 
		SET 
			PARTS_GODOWN_TRANS.UNIT_COST_AFTER= @M_UNIT_COST,
			PARTS_GODOWN_TRANS.UNIT_COST_DAYEND= @M_UNIT_COST,
			PARTS_GODOWN_TRANS.TOTAL_COST_DIFF= @TOTAL_COST_DIFF
		WHERE 
			PARTS_GODOWN_TRANS.TRANS_ID=@TRANS_ID

		 
		SET @ResultType = 0;
		SET @ResultMessage = 'ADD Succed';
	END TRY
	BEGIN CATCH
		--返回信息
		IF (ISNULL(@ResultType, 0)=0)
			BEGIN
				--ROLLBACK TRANSACTION
				SET @ResultType = -9999;
				SET @ResultMessage = ERROR_MESSAGE();
			END
			
		RETURN @ResultType;
	END CATCH

END
